include ../expand-button/expand-button
include ../button/button
include ../toxin-logo/toxin-logo

mixin header(options)
  -
    const { lang, currentPage, userName } = options; 
    const enLinksText = ["Home", "About Us", "Services", "Careers", "News", "Documentation"];
    const ruLinksText = ["О нас", "Услуги", "Вакансии", "Новости", "Соглашения"];

    let linksText;
    if (lang === "ru") linksText = [...ruLinksText];
    else if (lang === "en") linksText = [...enLinksText];

    const isExpandableItem = (linkText) => {
      return linkText === "Services" || linkText === "Услуги" || linkText === "Соглашения";
    };

    const isCurrentPage = (index) => index + 1 === currentPage;
  header.header
    .header__content
      .header__logo
        +toxin-logo().header__logo-svg
      nav.header__site-nav
        ul.header__nav-list
          each linkText, index in linksText
            - 
              const itemClassModifier = isExpandableItem(linkText) ? "header__nav-item_expandable" : "";
              const currentPageClassModifier = isCurrentPage(index) ? "header__nav-link_current" : "";
            li.header__nav-item(class = itemClassModifier)
              if itemClassModifier
                .header__nav-expand-button
                  +expand-button()
              a.header__nav-link(href="mock" class = currentPageClassModifier)= linkText
      nav.header__user-nav
        if userName
          span.header__user-name= userName
        else
          ul.header__nav-list
            -
              let buttonsText;
              if (lang === "ru") buttonsText = ["Войти", "Зарегистрироваться"];
              else if (lang === "en") buttonsText = ["Login", "Registr"];
            li.header__nav-item
              .header__nav-button.header__nav-button_login
                +button({ type: "sign-in", text: buttonsText[0] })
            li.header__nav-item  
              .header__nav-button.header__nav-button_registr
                +button({ type: "registr", text: buttonsText[1] })